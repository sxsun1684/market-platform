{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ordersData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      form: {},\n      fromVisible: false\n    };\n  },\n  mounted() {\n    this.loadOrders(1);\n  },\n  // methods: All click events or other function definition areas on this page\n  methods: {\n    loadOrders(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.ordersData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    navTo(url) {\n      location.href = url;\n    },\n    del(id) {\n      this.$request.delete('/orders/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('Successfully Deleted');\n          this.loadOrders(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.loadOrders(pageNum);\n    },\n    updateStatus(row, status) {\n      this.form = row;\n      this.form.status = status;\n      this.$request.put('/orders/update', this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success('Done!');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    addComment(row) {\n      this.fromVisible = true;\n      this.form = row;\n    },\n    save() {\n      let data = {\n        userId: this.user.id,\n        businessId: this.form.businessId,\n        goodsId: this.form.goodsId,\n        content: this.form.content\n      };\n      this.$request.post('/comment/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('Done!');\n          this.fromVisible = false;\n          this.updateStatus(this.form, 'Reviewed');\n          this.form = {};\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","ordersData","pageNum","pageSize","total","form","fromVisible","mounted","loadOrders","methods","$request","get","params","then","res","code","list","$message","error","msg","navTo","url","location","href","del","id","delete","success","handleCurrentChange","updateStatus","row","status","put","addComment","save","userId","businessId","goodsId","content","post"],"sources":["src/views/front/Orders.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 80%; background-color: white; margin: 30px auto; border-radius: 20px\">\n      <div style=\"padding-bottom: 10px\">\n        <div style=\"font-size: 18px; color: #000000FF; line-height: 80px; border-bottom: #cccccc 1px solid;\">\n          <div style=\"margin-left: 20px\">My Order: {{ ordersData.length }} {{ ordersData.length > 1 ? 'Pieces' : 'Piece' }}</div>\n        </div>\n        <div style=\"margin: 20px 0; padding: 0 40px\">\n          <div class=\"table\">\n            <el-table :data=\"ordersData\" strip>\n              <el-table-column label=\"Product Picture\" width=\"120px\">\n                <template v-slot=\"scope\">\n                  <el-image style=\"width: 80px; height: 60px; border-radius: 3px\" v-if=\"scope.row.goodsImg\"\n                            :src=\"scope.row.goodsImg\" :preview-src-list=\"[scope.row.goodsImg]\"></el-image>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"orderId\" label=\"Order ID\"></el-table-column>\n              <el-table-column prop=\"goodsName\" label=\"Product\" :show-overflow-tooltip=\"true\">\n                <template v-slot=\"scope\">\n                  <a :href=\"'/front/detail?id=' + scope.row.goodsId\">{{scope.row.goodsName}}</a>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"businessName\" label=\"Shop\">\n                <template v-slot=\"scope\">\n                  <a :href=\"'/front/business?id=' + scope.row.businessId\">{{scope.row.businessName}}</a>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"goodsPrice\" label=\"Price\" width=\"60\">\n                <template v-slot=\"scope\">\n                  {{scope.row.goodsPrice}} / {{scope.row.goodsUnit}}\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"num\" label=\"Quantity\"></el-table-column>\n              <el-table-column prop=\"price\" label=\"Total\"></el-table-column>\n              <el-table-column prop=\"username\" label=\"To\"></el-table-column>\n              <el-table-column prop=\"useraddress\" label=\"Address\"></el-table-column>\n              <el-table-column prop=\"phone\" label=\"Contact\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"Track\"></el-table-column>\n              <el-table-column label=\"Operation\" align=\"center\" width=\"180\">\n                <template v-slot=\"scope\">\n                  <el-button size=\"mini\" type=\"primary\" v-if=\"scope.row.status === 'Pending Shipment'\" plain @click=\"updateStatus(scope.row, 'Completed')\">Received</el-button>\n                  <el-button size=\"mini\" type=\"primary\" v-if=\"scope.row.status === 'Completed'\" plain @click=\"addComment(scope.row)\">Review</el-button>\n                  <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">Deleteeee</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n\n            <div class=\"pagination\" style=\"margin-top: 20px\">\n              <el-pagination\n                  background\n                  @current-change=\"handleCurrentChange\"\n                  :current-page=\"pageNum\"\n                  :page-sizes=\"[5, 10, 20]\"\n                  :page-size=\"pageSize\"\n                  layout=\"total, prev, pager, next\"\n                  :total=\"total\">\n              </el-pagination>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <el-dialog title=\"Please enter your comments\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"Reviews\" prop=\"username\">\n          <el-input type=\"textarea\" v-model=\"form.content\" placeholder=\"Please enter your comments\"></el-input>\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nexport default {\n\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ordersData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      form: {},\n      fromVisible: false\n    }\n  },\n  mounted() {\n    this.loadOrders(1)\n  },\n  // methods: All click events or other function definition areas on this page\n  methods: {\n    loadOrders(pageNum) {\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.ordersData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    navTo(url) {\n      location.href = url\n    },\n    del(id) {\n      this.$request.delete('/orders/delete/' + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success('Successfully Deleted')\n          this.loadOrders(1)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleCurrentChange(pageNum) {\n      this.loadOrders(pageNum)\n    },\n    updateStatus(row, status) {\n      this.form = row\n      this.form.status = status\n      this.$request.put('/orders/update', this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success('Done!')\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    addComment(row) {\n      this.fromVisible = true\n      this.form = row\n    },\n    save() {\n      let data = {\n        userId: this.user.id,\n        businessId: this.form.businessId,\n        goodsId: this.form.goodsId,\n        content: this.form.content,\n      }\n      this.$request.post('/comment/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('Done!')\n          this.fromVisible = false\n          this.updateStatus(this.form, 'Reviewed')\n          this.form = {}\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  }\n}\n</script>\n"],"mappings":"AA+EA;EAEAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,UAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACA;EACAC,OAAA;IACAD,WAAAN,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAQ,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAV,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAd,UAAA,GAAAa,GAAA,CAAAnB,IAAA,EAAAqB,IAAA;UACA,KAAAZ,KAAA,GAAAU,GAAA,CAAAnB,IAAA,EAAAS,KAAA;QACA;UACA,KAAAa,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAC,MAAAC,GAAA;MACAC,QAAA,CAAAC,IAAA,GAAAF,GAAA;IACA;IACAG,IAAAC,EAAA;MACA,KAAAf,QAAA,CAAAgB,MAAA,qBAAAD,EAAA,EAAAZ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,QAAA,CAAAU,OAAA;UACA,KAAAnB,UAAA;QACA;UACA,KAAAS,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAS,oBAAA1B,OAAA;MACA,KAAAM,UAAA,CAAAN,OAAA;IACA;IACA2B,aAAAC,GAAA,EAAAC,MAAA;MACA,KAAA1B,IAAA,GAAAyB,GAAA;MACA,KAAAzB,IAAA,CAAA0B,MAAA,GAAAA,MAAA;MACA,KAAArB,QAAA,CAAAsB,GAAA,wBAAA3B,IAAA,EAAAQ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,QAAA,CAAAU,OAAA;QACA;UACA,KAAAV,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAc,WAAAH,GAAA;MACA,KAAAxB,WAAA;MACA,KAAAD,IAAA,GAAAyB,GAAA;IACA;IACAI,KAAA;MACA,IAAAvC,IAAA;QACAwC,MAAA,OAAAvC,IAAA,CAAA6B,EAAA;QACAW,UAAA,OAAA/B,IAAA,CAAA+B,UAAA;QACAC,OAAA,OAAAhC,IAAA,CAAAgC,OAAA;QACAC,OAAA,OAAAjC,IAAA,CAAAiC;MACA;MACA,KAAA5B,QAAA,CAAA6B,IAAA,iBAAA5C,IAAA,EAAAkB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,QAAA,CAAAU,OAAA;UACA,KAAArB,WAAA;UACA,KAAAuB,YAAA,MAAAxB,IAAA;UACA,KAAAA,IAAA;QACA;UACA,KAAAY,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}