{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: \"Notice\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      orderId: null,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    save() {\n      // Save the logic that the button triggers to add or update\n      this.$request({\n        url: this.form.id ? '/orders/update' : '/orders/add',\n        method: this.form.id ? 'PUT' : 'POST',\n        data: this.form\n      }).then(res => {\n        if (res.code === '200') {\n          // Indicates successful save\n          this.$message.success('Successfully Saved');\n          this.load(1);\n          this.fromVisible = false;\n        } else {\n          this.$message.error(res.msg); // An error message is displayed\n        }\n      });\n    },\n    del(id) {\n      // Single delete\n      this.$confirm('Are you sure about deleting it?', 'Confirm deletion', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {\n            //Indicates successful operation\n            this.$message.success('Successful!');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // All row data currently selected\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('Please select data');\n        return;\n      }\n      this.$confirm('Are you sure to delete this data in bulk?', 'Confirm deletion', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // Indicates successful operation\n            this.$message.success('Done');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // Paging query\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          orderId: this.orderId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.orderId = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    updateStatus(row, status) {\n      this.form = row;\n      this.form.status = status;\n      this.save();\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","orderId","form","user","JSON","parse","localStorage","getItem","ids","created","load","methods","save","$request","url","id","method","then","res","code","$message","success","fromVisible","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","img","updateStatus","row","status"],"sources":["src/views/manager/Orders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"Please Enter Order ID\" style=\"width: 200px\" v-model=\"orderId\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">Query</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">Reset</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">Batch Deletion</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"Serial ID\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column label=\"Picture\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; \" v-if=\"scope.row.goodsImg\"\r\n                        :src=\"scope.row.goodsImg\" :preview-src-list=\"[scope.row.goodsImg]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"orderId\" label=\"Order ID\"></el-table-column>\r\n        <el-table-column prop=\"goodsName\" label=\"Product\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"goodsPrice\" label=\"Price\" show-overflow-tooltip>\r\n          <template v-slot=\"scope\">\r\n            {{scope.row.goodsPrice}} / {{scope.row.goodsUnit}}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"num\" label=\"Quantity\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"Total\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"businessName\" label=\"Affiliated Store\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"To\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"useraddress\" label=\"Address\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"Phone\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"Status\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column label=\"Operation\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" size=\"mini\" v-if=\"scope.row.status === 'Pending Shipment'\" @click=\"updateStatus(scope.row, 'Pending Receipt')\">Ship</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>Deleteeee</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Notice\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      orderId: null,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    save() {   // Save the logic that the button triggers to add or update\r\n      this.$request({\r\n        url: this.form.id ? '/orders/update' : '/orders/add',\r\n        method: this.form.id ? 'PUT' : 'POST',\r\n        data: this.form\r\n      }).then(res => {\r\n        if (res.code === '200') {  // Indicates successful save\r\n          this.$message.success('Successfully Saved')\r\n          this.load(1)\r\n          this.fromVisible = false\r\n        } else {\r\n          this.$message.error(res.msg)  // An error message is displayed\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // Single delete\r\n      this.$confirm('Are you sure about deleting it?', 'Confirm deletion', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/orders/delete/' + id).then(res => {\r\n          if (res.code === '200') {   //Indicates successful operation\r\n            this.$message.success('Successful!')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // All row data currently selected\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Please select data')\r\n        return\r\n      }\r\n      this.$confirm('Are you sure to delete this data in bulk?', 'Confirm deletion', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/orders/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // Indicates successful operation\r\n            this.$message.success('Done')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // Paging query\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/orders/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          orderId: this.orderId,\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    reset() {\r\n      this.orderId = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      this.form.img = response.data\r\n    },\r\n    updateStatus(row, status) {\r\n      this.form = row;\r\n      this.form.status = status\r\n      this.save()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}